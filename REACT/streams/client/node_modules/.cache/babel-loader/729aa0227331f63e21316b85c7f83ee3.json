{"ast":null,"code":"import streams from \"../api/streams\";\nexport const signIn = userId => {\n  return {\n    type: \"SIGN_IN\",\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: \"SIGN_OUT\"\n  };\n};\nexport const createStreams = formValues => {\n  return async dispatch => {\n    const response = await streams.post(\"/streams\", formValues);\n    dispatch({\n      type: \"CREATE_STREAM\",\n      payload: response.data\n    });\n  };\n};\nexport const fetchStreams = () => {\n  return async dispatch => {\n    const response = await streams.get(\"/streams\");\n    dispatch({\n      type: \"FETCH_STREAMS\",\n      payload: response.data\n    });\n  };\n};\nexport const fetchStream = id => {\n  return async dispatch => {\n    const response = await streams.get(`/streams/${id}`);\n    dispatch({\n      type: \"FETCH_STREAM\",\n      payload: response.data\n    });\n  };\n};\nexport const editStream = (formValues, id) => {\n  return async dispatch => {\n    const response = await streams.put(`/streams/${id}`, formValues);\n    dispatch({\n      type: \"EDIT_STREAM\",\n      payload: response.data\n    });\n  };\n};\nexport const deleteStream = id => {\n  return async dispatch => {\n    await streams.delete(`/streams/${id}`);\n    dispatch({\n      type: \"DELETE_STREAM\",\n      payload: id\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/52811/Coursera-Web/REACT/streams/client/src/actions/index.js"],"names":["streams","signIn","userId","type","payload","signOut","createStreams","formValues","dispatch","response","post","data","fetchStreams","get","fetchStream","id","editStream","put","deleteStream","delete"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,gBAApB;AAEA,OAAO,MAAMC,MAAM,GAAIC,MAAD,IAAY;AAC9B,SAAQ;AACJC,IAAAA,IAAI,EAAE,SADF;AAEJC,IAAAA,OAAO,EAAEF;AAFL,GAAR;AAIH,CALM;AAOP,OAAO,MAAMG,OAAO,GAAG,MAAM;AACzB,SAAQ;AACJF,IAAAA,IAAI,EAAE;AADF,GAAR;AAGH,CAJM;AAMP,OAAO,MAAMG,aAAa,GAAIC,UAAD,IAAgB;AACzC,SAAO,MAAOC,QAAP,IAAoB;AACvB,UAAMC,QAAQ,GAAG,MAAMT,OAAO,CAACU,IAAR,CAAa,UAAb,EAAyBH,UAAzB,CAAvB;AAEAC,IAAAA,QAAQ,CAAC;AAAEL,MAAAA,IAAI,EAAE,eAAR;AAAyBC,MAAAA,OAAO,EAAEK,QAAQ,CAACE;AAA3C,KAAD,CAAR;AACH,GAJD;AAKH,CANM;AAQP,OAAO,MAAMC,YAAY,GAAG,MAAM;AAC9B,SAAO,MAAOJ,QAAP,IAAoB;AACvB,UAAMC,QAAQ,GAAG,MAAMT,OAAO,CAACa,GAAR,CAAY,UAAZ,CAAvB;AAEAL,IAAAA,QAAQ,CAAE;AAAEL,MAAAA,IAAI,EAAE,eAAR;AAAyBC,MAAAA,OAAO,EAAEK,QAAQ,CAACE;AAA3C,KAAF,CAAR;AACH,GAJD;AAKH,CANM;AAQP,OAAO,MAAMG,WAAW,GAAIC,EAAD,IAAQ;AAC/B,SAAO,MAAOP,QAAP,IAAmB;AACtB,UAAMC,QAAQ,GAAG,MAAMT,OAAO,CAACa,GAAR,CAAa,YAAWE,EAAG,EAA3B,CAAvB;AAEAP,IAAAA,QAAQ,CAAC;AAAEL,MAAAA,IAAI,EAAE,cAAR;AAAwBC,MAAAA,OAAO,EAAEK,QAAQ,CAACE;AAA1C,KAAD,CAAR;AACH,GAJD;AAKH,CANM;AAQP,OAAO,MAAMK,UAAU,GAAG,CAACT,UAAD,EAAaQ,EAAb,KAAoB;AAC1C,SAAO,MAAOP,QAAP,IAAoB;AACvB,UAAMC,QAAQ,GAAG,MAAMT,OAAO,CAACiB,GAAR,CAAa,YAAWF,EAAG,EAA3B,EAA8BR,UAA9B,CAAvB;AAEAC,IAAAA,QAAQ,CAAC;AAAEL,MAAAA,IAAI,EAAE,aAAR;AAAuBC,MAAAA,OAAO,EAAEK,QAAQ,CAACE;AAAzC,KAAD,CAAR;AACH,GAJD;AAKH,CANM;AAQP,OAAO,MAAMO,YAAY,GAAIH,EAAD,IAAQ;AAChC,SAAO,MAAOP,QAAP,IAAoB;AACvB,UAAMR,OAAO,CAACmB,MAAR,CAAgB,YAAWJ,EAAG,EAA9B,CAAN;AAEAP,IAAAA,QAAQ,CAAC;AAAEL,MAAAA,IAAI,EAAE,eAAR;AAAyBC,MAAAA,OAAO,EAAEW;AAAlC,KAAD,CAAR;AACH,GAJD;AAKH,CANM","sourcesContent":["import streams from \"../api/streams\";\r\n\r\nexport const signIn = (userId) => {\r\n    return ({\r\n        type: \"SIGN_IN\",\r\n        payload: userId\r\n    });\r\n};\r\n\r\nexport const signOut = () => {\r\n    return ({\r\n        type: \"SIGN_OUT\"\r\n    });\r\n};\r\n\r\nexport const createStreams = (formValues) => {\r\n    return async (dispatch) => {\r\n        const response = await streams.post(\"/streams\", formValues);\r\n        \r\n        dispatch({ type: \"CREATE_STREAM\", payload: response.data });\r\n    }\r\n};\r\n\r\nexport const fetchStreams = () => {\r\n    return async (dispatch) => {\r\n        const response = await streams.get(\"/streams\");\r\n\r\n        dispatch ({ type: \"FETCH_STREAMS\", payload: response.data});\r\n    }\r\n}\r\n\r\nexport const fetchStream = (id) => {\r\n    return async (dispatch) =>{\r\n        const response = await streams.get(`/streams/${id}`);\r\n\r\n        dispatch({ type: \"FETCH_STREAM\", payload: response.data });\r\n    }\r\n}\r\n\r\nexport const editStream = (formValues, id) => {\r\n    return async (dispatch) => {\r\n        const response = await streams.put(`/streams/${id}`, formValues);\r\n\r\n        dispatch({ type: \"EDIT_STREAM\", payload: response.data});\r\n    }\r\n}\r\n\r\nexport const deleteStream = (id) => {\r\n    return async (dispatch) => {\r\n        await streams.delete(`/streams/${id}`);\r\n\r\n        dispatch({ type: \"DELETE_STREAM\", payload: id })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}