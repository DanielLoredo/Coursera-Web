{"ast":null,"code":"import streams from \"../api/streams\";\nimport history from \"../history\";\nexport const signIn = userId => {\n  return {\n    type: \"SIGN_IN\",\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: \"SIGN_OUT\"\n  };\n};\nexport const createStreams = formValues => {\n  return async (dispatch, getState) => {\n    const {\n      userId\n    } = getState().auth;\n    const response = await streams.post(\"/streams\", { ...formValues,\n      userId\n    });\n    dispatch({\n      type: \"CREATE_STREAM\",\n      payload: response.data\n    });\n    history.push(\"/\");\n  };\n};\nexport const fetchStreams = () => {\n  return async dispatch => {\n    const response = await streams.get(\"/streams\");\n    dispatch({\n      type: \"FETCH_STREAMS\",\n      payload: response.data\n    });\n  };\n};\nexport const fetchStream = id => {\n  return async dispatch => {\n    const response = await streams.get(`/streams/${id}`);\n    dispatch({\n      type: \"FETCH_STREAM\",\n      payload: response.data\n    });\n  };\n};\nexport const editStream = (formValues, id) => {\n  return async dispatch => {\n    const response = await streams.patch(`/streams/${id}`, formValues);\n    dispatch({\n      type: \"EDIT_STREAM\",\n      payload: response.data\n    });\n    history.push(\"/\");\n  };\n};\nexport const deleteStream = id => {\n  return async dispatch => {\n    await streams.delete(`/streams/${id}`);\n    dispatch({\n      type: \"DELETE_STREAM\",\n      payload: id\n    });\n    history.push(\"/\");\n  };\n};","map":{"version":3,"sources":["C:/Users/52811/Coursera-Web/REACT/streams/client/src/actions/index.js"],"names":["streams","history","signIn","userId","type","payload","signOut","createStreams","formValues","dispatch","getState","auth","response","post","data","push","fetchStreams","get","fetchStream","id","editStream","patch","deleteStream","delete"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,gBAApB;AACA,OAAOC,OAAP,MAAoB,YAApB;AAEA,OAAO,MAAMC,MAAM,GAAIC,MAAD,IAAY;AAC9B,SAAQ;AACJC,IAAAA,IAAI,EAAE,SADF;AAEJC,IAAAA,OAAO,EAAEF;AAFL,GAAR;AAIH,CALM;AAOP,OAAO,MAAMG,OAAO,GAAG,MAAM;AACzB,SAAQ;AACJF,IAAAA,IAAI,EAAE;AADF,GAAR;AAGH,CAJM;AAMP,OAAO,MAAMG,aAAa,GAAIC,UAAD,IAAgB;AACzC,SAAO,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACjC,UAAM;AAAEP,MAAAA;AAAF,QAAaO,QAAQ,GAAGC,IAA9B;AACA,UAAMC,QAAQ,GAAG,MAAMZ,OAAO,CAACa,IAAR,CAAa,UAAb,EAAyB,EAAC,GAAGL,UAAJ;AAAgBL,MAAAA;AAAhB,KAAzB,CAAvB;AAEAM,IAAAA,QAAQ,CAAC;AAAEL,MAAAA,IAAI,EAAE,eAAR;AAAyBC,MAAAA,OAAO,EAAEO,QAAQ,CAACE;AAA3C,KAAD,CAAR;AACAb,IAAAA,OAAO,CAACc,IAAR,CAAa,GAAb;AACH,GAND;AAOH,CARM;AAUP,OAAO,MAAMC,YAAY,GAAG,MAAM;AAC9B,SAAO,MAAOP,QAAP,IAAoB;AACvB,UAAMG,QAAQ,GAAG,MAAMZ,OAAO,CAACiB,GAAR,CAAY,UAAZ,CAAvB;AAEAR,IAAAA,QAAQ,CAAE;AAAEL,MAAAA,IAAI,EAAE,eAAR;AAAyBC,MAAAA,OAAO,EAAEO,QAAQ,CAACE;AAA3C,KAAF,CAAR;AACH,GAJD;AAKH,CANM;AAQP,OAAO,MAAMI,WAAW,GAAIC,EAAD,IAAQ;AAC/B,SAAO,MAAOV,QAAP,IAAmB;AACtB,UAAMG,QAAQ,GAAG,MAAMZ,OAAO,CAACiB,GAAR,CAAa,YAAWE,EAAG,EAA3B,CAAvB;AAEAV,IAAAA,QAAQ,CAAC;AAAEL,MAAAA,IAAI,EAAE,cAAR;AAAwBC,MAAAA,OAAO,EAAEO,QAAQ,CAACE;AAA1C,KAAD,CAAR;AACH,GAJD;AAKH,CANM;AAQP,OAAO,MAAMM,UAAU,GAAG,CAACZ,UAAD,EAAaW,EAAb,KAAoB;AAC1C,SAAO,MAAOV,QAAP,IAAoB;AACvB,UAAMG,QAAQ,GAAG,MAAMZ,OAAO,CAACqB,KAAR,CAAe,YAAWF,EAAG,EAA7B,EAAgCX,UAAhC,CAAvB;AAEAC,IAAAA,QAAQ,CAAC;AAAEL,MAAAA,IAAI,EAAE,aAAR;AAAuBC,MAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAzC,KAAD,CAAR;AACAb,IAAAA,OAAO,CAACc,IAAR,CAAa,GAAb;AACH,GALD;AAMH,CAPM;AASP,OAAO,MAAMO,YAAY,GAAIH,EAAD,IAAQ;AAChC,SAAO,MAAOV,QAAP,IAAoB;AACvB,UAAMT,OAAO,CAACuB,MAAR,CAAgB,YAAWJ,EAAG,EAA9B,CAAN;AAEAV,IAAAA,QAAQ,CAAC;AAAEL,MAAAA,IAAI,EAAE,eAAR;AAAyBC,MAAAA,OAAO,EAAEc;AAAlC,KAAD,CAAR;AACAlB,IAAAA,OAAO,CAACc,IAAR,CAAa,GAAb;AACH,GALD;AAMH,CAPM","sourcesContent":["import streams from \"../api/streams\";\r\nimport history from \"../history\";\r\n\r\nexport const signIn = (userId) => {\r\n    return ({\r\n        type: \"SIGN_IN\",\r\n        payload: userId\r\n    });\r\n};\r\n\r\nexport const signOut = () => {\r\n    return ({\r\n        type: \"SIGN_OUT\"\r\n    });\r\n};\r\n\r\nexport const createStreams = (formValues) => {\r\n    return async (dispatch, getState) => {\r\n        const { userId } = getState().auth;\r\n        const response = await streams.post(\"/streams\", {...formValues, userId});\r\n        \r\n        dispatch({ type: \"CREATE_STREAM\", payload: response.data });\r\n        history.push(\"/\");\r\n    }\r\n};\r\n\r\nexport const fetchStreams = () => {\r\n    return async (dispatch) => {\r\n        const response = await streams.get(\"/streams\");\r\n\r\n        dispatch ({ type: \"FETCH_STREAMS\", payload: response.data});\r\n    }\r\n}\r\n\r\nexport const fetchStream = (id) => {\r\n    return async (dispatch) =>{\r\n        const response = await streams.get(`/streams/${id}`);\r\n\r\n        dispatch({ type: \"FETCH_STREAM\", payload: response.data });\r\n    }\r\n}\r\n\r\nexport const editStream = (formValues, id) => {\r\n    return async (dispatch) => {\r\n        const response = await streams.patch(`/streams/${id}`, formValues);\r\n\r\n        dispatch({ type: \"EDIT_STREAM\", payload: response.data});\r\n        history.push(\"/\");\r\n    }\r\n}\r\n\r\nexport const deleteStream = (id) => {\r\n    return async (dispatch) => {\r\n        await streams.delete(`/streams/${id}`);\r\n\r\n        dispatch({ type: \"DELETE_STREAM\", payload: id });\r\n        history.push(\"/\");\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}