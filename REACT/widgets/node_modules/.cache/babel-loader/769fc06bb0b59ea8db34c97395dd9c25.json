{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\n\nconst Router = ({\n  path,\n  children\n}) => {\n  _s();\n\n  const [currentPath, setCurrentPath] = useState(window.location.pathname);\n  useEffect(() => {\n    onLocationChange = () => {\n      setCurrentPath(window.location.pathname);\n    };\n\n    window.addEventListener(\"popstate\", onLocationChange);\n    return () => {\n      window.removeEventListener(\"popstate\", onLocationChange);\n    };\n  }, []);\n\n  if (window.location.pathname === path) {\n    return children;\n  } else {\n    return null;\n  }\n};\n\n_s(Router, \"cTW2cqj/hmHGzdDpGoEziN+i5CA=\");\n\n_c = Router;\nexport default Router;\n\nvar _c;\n\n$RefreshReg$(_c, \"Router\");","map":{"version":3,"sources":["C:/Users/52811/Coursera-Web/REACT/widgets/src/components/Router.js"],"names":["useEffect","useState","Router","path","children","currentPath","setCurrentPath","window","location","pathname","onLocationChange","addEventListener","removeEventListener"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAD,KAAsB;AAAA;;AACjC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAACM,MAAM,CAACC,QAAP,CAAgBC,QAAjB,CAA9C;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,gBAAgB,GAAG,MAAM;AACrBJ,MAAAA,cAAc,CAACC,MAAM,CAACC,QAAP,CAAgBC,QAAjB,CAAd;AACH,KAFD;;AAIAF,IAAAA,MAAM,CAACI,gBAAP,CAAwB,UAAxB,EAAoCD,gBAApC;AAEA,WAAO,MAAM;AACTH,MAAAA,MAAM,CAACK,mBAAP,CAA2B,UAA3B,EAAuCF,gBAAvC;AACH,KAFD;AAGH,GAVQ,EAUN,EAVM,CAAT;;AAYA,MAAGH,MAAM,CAACC,QAAP,CAAgBC,QAAhB,KAA6BN,IAAhC,EAAqC;AACjC,WAAOC,QAAP;AACH,GAFD,MAEK;AACD,WAAO,IAAP;AACH;AACJ,CApBD;;GAAMF,M;;KAAAA,M;AAsBN,eAAeA,MAAf","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nconst Router = ({path, children}) => {\r\n    const [currentPath, setCurrentPath] = useState(window.location.pathname);\r\n\r\n    useEffect(() => {\r\n        onLocationChange = () => {\r\n            setCurrentPath(window.location.pathname);\r\n        }\r\n\r\n        window.addEventListener(\"popstate\", onLocationChange);\r\n\r\n        return () => {\r\n            window.removeEventListener(\"popstate\", onLocationChange); \r\n        }\r\n    }, []);\r\n    \r\n    if(window.location.pathname === path){\r\n        return children;\r\n    }else{\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default Router;"]},"metadata":{},"sourceType":"module"}