{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\52811\\\\Coursera-Web\\\\REACT\\\\widgets\\\\src\\\\components\\\\Dropdown.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"../css/bootstrap.min.css\";\n\nconst Dropdown = props => {\n  _s();\n\n  const [open, setOpen] = useState(false);\n  useEffect(() => {\n    document.body.addEventListener(\"click\", () => {\n      console.log(\"CLICCKKKKKKK\");\n    });\n  });\n  const renderedOptions = props.options.map(option => {\n    if (option.value === props.selected.value) {\n      return null;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"a\", {\n      className: `dropdown-item ${open ? \"d-block\" : \"d-none\"}`,\n      href: \"#\",\n      onClick: () => props.onSelectedChange(option),\n      children: option.label\n    }, option.value, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropdown\",\n    children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n      children: \"Select a color\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setOpen(!open);\n      },\n      className: \"btn dropdown-toggle\",\n      type: \"button\",\n      children: props.selected.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: renderedOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dropdown, \"e27cRtNMdAs0U0o1oHlS6A8OEBo=\");\n\n_c = Dropdown;\nexport default Dropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"sources":["C:/Users/52811/Coursera-Web/REACT/widgets/src/components/Dropdown.js"],"names":["React","useState","useEffect","Dropdown","props","open","setOpen","document","body","addEventListener","console","log","renderedOptions","options","map","option","value","selected","onSelectedChange","label"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,0BAAP;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,KAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,QAAQ,CAACC,IAAT,CAAcC,gBAAd,CAA+B,OAA/B,EAAwC,MAAM;AAC1CC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACH,KAFD;AAGH,GAJQ,CAAT;AAMA,QAAMC,eAAe,GAAGR,KAAK,CAACS,OAAN,CAAcC,GAAd,CAAmBC,MAAD,IAAY;AAElD,QAAGA,MAAM,CAACC,KAAP,KAAiBZ,KAAK,CAACa,QAAN,CAAeD,KAAnC,EAA0C;AACtC,aAAO,IAAP;AACH;;AAED,wBACI;AACG,MAAA,SAAS,EAAK,iBAAgBX,IAAI,GAAG,SAAH,GAAe,QAAS,EAD7D;AACgE,MAAA,IAAI,EAAG,GADvE;AAEG,MAAA,OAAO,EAAI,MAAMD,KAAK,CAACc,gBAAN,CAAuBH,MAAvB,CAFpB;AAAA,gBAIKA,MAAM,CAACI;AAJZ,OAAUJ,MAAM,CAACC,KAAjB;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH,GAduB,CAAxB;AAgBA,sBACI;AAAK,IAAA,SAAS,EAAG,UAAjB;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAQ,MAAA,OAAO,EAAG,MAAM;AAACV,QAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AAAe,OAAxC;AAA0C,MAAA,SAAS,EAAC,qBAApD;AAA0E,MAAA,IAAI,EAAC,QAA/E;AAAA,gBACKD,KAAK,CAACa,QAAN,CAAeE;AADpB;AAAA;AAAA;AAAA;AAAA,YAHJ,eAMI;AAAA,gBACKP;AADL;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CArCD;;GAAMT,Q;;KAAAA,Q;AAwCN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"../css/bootstrap.min.css\";\r\n\r\nconst Dropdown = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        document.body.addEventListener(\"click\", () => {\r\n            console.log(\"CLICCKKKKKKK\");\r\n        });\r\n    });\r\n\r\n    const renderedOptions = props.options.map((option) => {\r\n\r\n        if(option.value === props.selected.value) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <a key = {option.value} \r\n               className = {`dropdown-item ${open ? \"d-block\" : \"d-none\"}`} href = \"#\"\r\n               onClick = {() => props.onSelectedChange(option)}\r\n            >\r\n                {option.label}\r\n            </a>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className = \"dropdown\">\r\n            <h6>Select a color</h6>\r\n            \r\n            <button onClick= {() => {setOpen(!open)}} className=\"btn dropdown-toggle\" type=\"button\">\r\n                {props.selected.label}\r\n            </button>\r\n            <div>\r\n                {renderedOptions}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Dropdown;"]},"metadata":{},"sourceType":"module"}